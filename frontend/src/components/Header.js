import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import { LogOut, User, Menu, X } from 'lucide-react';
export const Header = () => {
    const { user, logout } = useAuth();
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);
    const handleLogout = async () => {
        try {
            await logout();
        }
        catch (error) {
            console.error('Logout failed:', error);
        }
    };
    return (_jsxs("header", { className: "bg-white shadow-sm border-b border-gray-200", children: [_jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", children: [_jsxs("div", { className: "flex justify-between items-center h-16", children: [_jsx("div", { className: "flex items-center", children: _jsx("div", { className: "flex-shrink-0", children: _jsx("h1", { className: "text-xl font-bold text-gray-900", children: "Your App" }) }) }), _jsxs("div", { className: "hidden md:flex items-center space-x-4", children: [_jsxs("nav", { className: "flex space-x-8", children: [_jsx("a", { href: "/dashboard", className: "text-gray-500 hover:text-gray-700 px-3 py-2 rounded-md text-sm font-medium", children: "Dashboard" }), _jsx("a", { href: "/categories", className: "text-gray-500 hover:text-gray-700 px-3 py-2 rounded-md text-sm font-medium", children: "Categories" })] }), _jsxs("div", { className: "relative", children: [_jsxs("button", { onClick: () => setIsProfileMenuOpen(!isProfileMenuOpen), className: "flex items-center space-x-2 text-gray-500 hover:text-gray-700 focus:outline-none", children: [_jsx("div", { className: "w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center", children: user?.profile?.avatar ? (_jsx("img", { src: user.profile.avatar, alt: "Profile", className: "w-8 h-8 rounded-full object-cover" })) : (_jsx(User, { className: "w-5 h-5 text-white" })) }), _jsx("span", { className: "text-sm font-medium", children: user?.profile?.firstName || user?.name || 'User' })] }), isProfileMenuOpen && (_jsxs("div", { className: "absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50", children: [_jsxs("div", { className: "px-4 py-2 text-sm text-gray-700 border-b", children: [_jsx("div", { className: "font-medium", children: user?.name }), _jsx("div", { className: "text-gray-500", children: user?.email })] }), _jsx("a", { href: "/profile", className: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100", children: "Profile Settings" }), _jsxs("button", { onClick: handleLogout, className: "w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2", children: [_jsx(LogOut, { className: "w-4 h-4" }), _jsx("span", { children: "Sign out" })] })] }))] })] }), _jsx("div", { className: "md:hidden", children: _jsx("button", { onClick: () => setIsMenuOpen(!isMenuOpen), className: "text-gray-500 hover:text-gray-700 focus:outline-none", children: isMenuOpen ? (_jsx(X, { className: "w-6 h-6" })) : (_jsx(Menu, { className: "w-6 h-6" })) }) })] }), isMenuOpen && (_jsx("div", { className: "md:hidden", children: _jsxs("div", { className: "px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200", children: [_jsx("a", { href: "/dashboard", className: "text-gray-500 hover:text-gray-700 block px-3 py-2 rounded-md text-base font-medium", children: "Dashboard" }), _jsx("a", { href: "/categories", className: "text-gray-500 hover:text-gray-700 block px-3 py-2 rounded-md text-base font-medium", children: "Categories" }), _jsxs("div", { className: "border-t border-gray-200 pt-4 pb-3", children: [_jsxs("div", { className: "flex items-center px-3", children: [_jsx("div", { className: "w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center", children: user?.profile?.avatar ? (_jsx("img", { src: user.profile.avatar, alt: "Profile", className: "w-8 h-8 rounded-full object-cover" })) : (_jsx(User, { className: "w-5 h-5 text-white" })) }), _jsxs("div", { className: "ml-3", children: [_jsx("div", { className: "text-base font-medium text-gray-800", children: user?.name }), _jsx("div", { className: "text-sm font-medium text-gray-500", children: user?.email })] })] }), _jsxs("div", { className: "mt-3 space-y-1 px-2", children: [_jsx("a", { href: "/profile", className: "block px-3 py-2 rounded-md text-base font-medium text-gray-500 hover:text-gray-700", children: "Profile Settings" }), _jsx("button", { onClick: handleLogout, className: "w-full text-left block px-3 py-2 rounded-md text-base font-medium text-gray-500 hover:text-gray-700", children: "Sign out" })] })] })] }) }))] }), isProfileMenuOpen && (_jsx("div", { className: "fixed inset-0 z-40", onClick: () => setIsProfileMenuOpen(false) }))] }));
};
